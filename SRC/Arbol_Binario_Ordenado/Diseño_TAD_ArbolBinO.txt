TAD ÁrbolBinario (ABB)

Datos Mínimos:

    raiz: NodoBinario → Apunta al primer nodo del árbol.

Comportamiento:

    Constructores:

        ArbolBinario(): Crea un árbol vacío.

    Operaciones Básicas:

        getRaiz() -> NodoBinario: Retorna la raíz.

        esVacio() -> bool: Retorna true si el árbol está vacío.

        datoRaiz() -> T: Retorna el dato almacenado en la raíz.

        altura() -> int: Retorna la altura del árbol.

        tamano() -> int: Retorna el número total de nodos.

    Inserción y Eliminación (ABB):

        insertar(valor: T): Inserta un valor respetando la propiedad del ABB.

        eliminar(valor: T): Busca un valor y lo elimina siguiendo la regla del ABB.

    Búsqueda y Subárboles:

        buscar(valor: T) -> bool: Retorna true si el valor está en el árbol.

        altura(subarbol: NodoBinario) -> int: Retorna la altura de un subárbol.

        tamano(subarbol: NodoBinario) -> int: Retorna la cantidad de nodos en un subárbol.

    Recorridos (corregidos):

        preOrden(): Imprime en preorden desde la raíz.

        inOrden(): Imprime en inorden desde la raíz.

        posOrden(): Imprime en postorden desde la raíz.

        nivelOrden(): Imprime en recorrido por niveles.

        preOrden(subarbol: NodoBinario): Imprime en preorden desde un subárbol dado.

        inOrden(subarbol: NodoBinario): Imprime en inorden desde un subárbol dado.

        posOrden(subarbol: NodoBinario): Imprime en postorden desde un subárbol dado.

        nivelOrden(subarbol: NodoBinario): Imprime en recorrido por niveles desde un subárbol dado.

TAD NodoBinario

Datos Mínimos:

    dato: T → Almacena el contenido del nodo.

    izq: NodoBinario → Apunta al hijo izquierdo.

    der: NodoBinario → Apunta al hijo derecho.

Comportamiento:

    Constructores:

        NodoBinario(dato: T): Crea un nodo con un valor dado.

        NodoBinario(): Crea un nodo vacío.

    Setters y Getters:

        obtenerDato() -> T

        fijarDato(val: T)

        obtenerHijoIzq() -> NodoBinario

        obtenerHijoDer() -> NodoBinario

        fijarHijoIzq(izq: NodoBinario)

        fijarHijoDer(der: NodoBinario)
